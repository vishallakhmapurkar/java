/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CrptoGraphyMain.java
 *
 * Created on Jun 17, 2010, 5:53:24 PM
 */

package newadvancesecuritysystem;

import java.awt.Font;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.awt.event.*;
import java.awt.*;
import java.applet.*;
import javax.swing.*;
import java.io.*;
import javax.swing.filechooser.*;


/**
 *
 * @author Vishal
 */
public class CrptoGraphyMain extends javax.swing.JFrame implements Runnable{
 int height=0,width=0,key;
              char ch;
                     byte [] bdd;

 String str,path,name,name1;
      String inFilename,sdec,str3,str64;
      JFileChooser choose,choosesv;
      File file,file2;
      FileInputStream in;
boolean decrypt=false;
boolean process=false;
boolean base16enc=false;
boolean base16dec=false;
boolean base32enc=false;
boolean base32dec=false;
boolean base64enc=false;
boolean basesubstidec=false;
boolean basesubstienc=false;
boolean base64dec=false;

  String str2=" New Advanced Security System                           New Advanced Security System                          New Advanced Security System                            ";

    /** Creates new form CrptoGraphyMain */
    public CrptoGraphyMain() {
        initComponents();
         width=(Toolkit.getDefaultToolkit().getScreenSize().width -getSize().width)/2;
		height=(Toolkit.getDefaultToolkit().getScreenSize().height-getSize().height)/2;
		setLocation(width,height);
                jTextField1.setText(str);
                
                  jTextField1.setFont(new Font ("Copperplate Gothic Bold",1,20));

                jTextField1.setEditable(false);
		        jTextField1.setFocusable(false);
                        Thread t=new Thread(this,"");
                        t.start();

       jLabel3.setVisible(false);
              jLabel5.setVisible(false);
             // jTabbedPane4.setEnabledAt(0,false);
             jTabbedPane4.setEnabledAt(1,false);
jTabbedPane4.setEnabledAt(2,false);
jTabbedPane4.setEnabledAt(3,false);
jTabbedPane4.setEnabledAt(4,false);
jLabel6.setVisible(false);
 
 setDefaultLookAndFeelDecorated(true);
            //  jTabbedPane5.setEnabled(false);
              //jTabbedPane4.setEnabled(false);
             // jTabbedPane3.setEnabled(false);
             // jTabbedPane2.setEnabled(false);
//jPanel4.setEnabled(false);
//jPanel5.setEnabled(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptoGraphy!...");
        setResizable(false);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/offbase.png"))); // NOI18N
        jLabel2.setText(" ");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onbase.png"))); // NOI18N
        jLabel3.setText(" ");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sbstituteoff.png"))); // NOI18N
        jLabel4.setText(" ");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sbstituteon.png"))); // NOI18N
        jLabel5.setText(" ");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 0, 0));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTabbedPane1.setBackground(new java.awt.Color(0, 51, 102));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 0, 0)));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setOpaque(true);

        jTabbedPane4.setBackground(new java.awt.Color(0, 51, 102));
        jTabbedPane4.setForeground(new java.awt.Color(204, 51, 0));

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bin.png"))); // NOI18N
        jLabel1.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Welcome", jPanel4);

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));

        jButton2.setText("OpenFile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Decode");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Encode");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jTextArea1.setForeground(new java.awt.Color(0, 255, 153));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(84, 84, 84))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(233, Short.MAX_VALUE)
                    .addComponent(jButton5)
                    .addGap(168, 168, 168)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(369, Short.MAX_VALUE)
                    .addComponent(jButton5)
                    .addContainerGap()))
        );

        jTabbedPane4.addTab("Base 16", jPanel5);

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));

        jTextArea2.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jTextArea2.setForeground(new java.awt.Color(0, 255, 153));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        jButton6.setText("OpenFile");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Save File");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Encode");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Decode");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(38, 38, 38)
                .addComponent(jButton9)
                .addGap(53, 53, 53))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jButton7)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Base 32", jPanel6);

        jPanel7.setBackground(new java.awt.Color(0, 102, 102));

        jTextArea3.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea3.setColumns(20);
        jTextArea3.setEditable(false);
        jTextArea3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jTextArea3.setForeground(new java.awt.Color(0, 255, 153));
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea3);

        jButton10.setText("OpenFile");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Save File");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Encode");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Decode");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(31, 31, 31)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addGap(34, 34, 34)
                .addComponent(jButton13)
                .addGap(56, 56, 56))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton12)
                    .addComponent(jButton11)
                    .addComponent(jButton10))
                .addContainerGap())
        );

        jTabbedPane4.addTab("Base 64", jPanel7);

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel8.setFont(new java.awt.Font("Tahoma", 1, 11));

        jTextArea4.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea4.setColumns(20);
        jTextArea4.setEditable(false);
        jTextArea4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jTextArea4.setForeground(new java.awt.Color(0, 255, 153));
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setWrapStyleWord(true);
        jScrollPane4.setViewportView(jTextArea4);

        jButton14.setText("OpenFile");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setText("Encode");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Decode");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addGap(28, 28, 28)
                .addComponent(jButton16)
                .addGap(34, 34, 34)
                .addComponent(jButton17)
                .addGap(41, 41, 41))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton16)
                    .addComponent(jButton14))
                .addContainerGap())
        );

        jTabbedPane4.addTab("Substitute", jPanel8);

        jTabbedPane1.addTab("All cryptograhy Methods", jTabbedPane4);

        jLabel9.setForeground(new java.awt.Color(51, 255, 204));
        jLabel9.setText("<-  Back To Main Window");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ajax-loader (1).gif"))); // NOI18N
        jLabel6.setText(" ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel17.setForeground(new java.awt.Color(0, 204, 153));
        jLabel17.setText("Send Mail ");
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(391, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(127, 127, 127))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)))
                .addGap(39, 39, 39))
        );

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/spinstar.gif"))); // NOI18N
        jLabel15.setText(" ");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/spinstar.gif"))); // NOI18N
        jLabel16.setText(" ");

        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setForeground(new java.awt.Color(0, 204, 204));
        jTextField1.setText(" ");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setToolTipText("Close");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setLabel("X");
        jButton1.setRolloverEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel8.setForeground(new java.awt.Color(0, 204, 204));
        jLabel8.setText(" @ All Right Reserved  2010");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                        .addGap(58, 58, 58)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)))
                .addGap(31, 31, 31))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(680, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        if(jLabel5.isVisible()) {
            JOptionPane.showMessageDialog(this,"Please Off Substitute Method" ,"Operation Error",JOptionPane.INFORMATION_MESSAGE);
        } else {
            Point p=new Point();
            p=jLabel2.getLocation();
            jLabel2.setVisible(false);
            jLabel3.setLocation(p.x,p.y);
            jLabel3.setVisible(true);
            //jTabbedPane1.setEnabled(true);
            //jTabbedPane5.setEnabled(false);
           // jTabbedPane4.setEnabled(true);
           // jTabbedPane3.setEnabled(true);
           //jTabbedPane2.setEnabled(true);
jTabbedPane4.setEnabledAt(0,false);
jTabbedPane4.setEnabledAt(1,true);
jTabbedPane4.setEnabledAt(2,true);
jTabbedPane4.setEnabledAt(3,true);
//jPanel5.show();
jPanel4.show(false);
           // jPanel2.setVisible(true);
        }
}//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        Point p=new Point();
        p=jLabel3.getLocation();
        jLabel3.setVisible(false);
        jLabel2.setLocation(p.x,p.y);
        jLabel2.setVisible(true);
        //jTabbedPane1.setEnabled(false);
        jTabbedPane4.setEnabledAt(0,true);
jTabbedPane4.setEnabledAt(1,false);
jTabbedPane4.setEnabledAt(2,false);
jTabbedPane4.setEnabledAt(3,false);
jPanel4.show(true);

    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        if(jLabel3.isVisible()) {
            JOptionPane.showMessageDialog(this,"Please Off Base Method" ,"Operation Error",JOptionPane.INFORMATION_MESSAGE);
        } else {
            Point p=new Point();
            p=jLabel4.getLocation();
            jLabel4.setVisible(false);
            jLabel5.setLocation(p.x,p.y);
            jLabel5.setVisible(true);
            jTabbedPane4.setEnabledAt(0,false);
jTabbedPane4.setEnabledAt(1,false);
jTabbedPane4.setEnabledAt(2,false);
jTabbedPane4.setEnabledAt(3,false);
jTabbedPane4.setEnabledAt(4,true);
//jPanel8.show();
jPanel4.show(false);

           //  jTabbedPane3.setEnabled(false);
          //  jTabbedPane2.setEnabled(false);
          //  jTabbedPane5.setEnabled(true);

        }
}//GEN-LAST:event_jLabel4MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       int r=  JOptionPane.showConfirmDialog(this, "Do you want to realy close this application ","Confirm Massage", JOptionPane.OK_CANCEL_OPTION);
      if(r==JOptionPane.OK_OPTION)
      {
        System.exit(0);
      }
      else
      {
      return;
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
         Point p=new Point();
        p=jLabel5.getLocation();
        jLabel5.setVisible(false);
        jLabel4.setLocation(p.x,p.y);
        jLabel4.setVisible(true);
       
                jTabbedPane4.setEnabledAt(0,true);
jTabbedPane4.setEnabledAt(1,false);
jTabbedPane4.setEnabledAt(2,false);
jTabbedPane4.setEnabledAt(3,false);
jTabbedPane4.setEnabledAt(4,false);

jPanel4.show(true);


    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        this.dispose();
        Main m=new Main();
        m.show();
}//GEN-LAST:event_jLabel9MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 jTextArea1.setText("");
                  open();
                  try{
                    FileReader fr=new FileReader(file);
		            BufferedReader br=new BufferedReader(fr);
		            String s;

		            while ((s=br.readLine())!=null)
		            {
		                  jTextArea1.append(s);
		            }

                     }catch(Exception e){}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
process=true;
        Thread tbase16enc=new Thread(this,"");
         str = jTextArea1.getText();
			     //ta.setText("");
			   
	base16enc=true;
 tbase16enc.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        process=true;
        str3 = jTextArea1.getText();
        Thread tbase16dec=new Thread(this,"");
        base16dec=true;
tbase16dec.start();
			   
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 save();
                   str = jTextArea1.getText();
			     jTextArea1.setText("");
			     try{
			            byte b[]=str.getBytes();

		                FileOutputStream f = new FileOutputStream(file2);
		                for (int i=0;i<b.length ;i++ )
		                {
			                f.write((char) b[i]);
		                }
		                f.close();
			         }
			         catch(Exception e)
			         {}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
static class Base32
{
 private static final String base32Chars =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
    private static final int[] base32Lookup =
    { 0xFF,0xFF,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F, // '0', '1', '2', '3', '4', '5', '6', '7'
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF, // '8', '9', ':', ';', '<', '=', '>', '?'
      0xFF,0x00,0x01,0x02,0x03,0x04,0x05,0x06, // '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G'
      0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E, // 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'
      0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16, // 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'
      0x17,0x18,0x19,0xFF,0xFF,0xFF,0xFF,0xFF, // 'X', 'Y', 'Z', '[', '\', ']', '^', '_'
      0xFF,0x00,0x01,0x02,0x03,0x04,0x05,0x06, // '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g'
      0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E, // 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'
      0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16, // 'p', 'q', 'r', 's', 't', 'u', 'v', 'w'
      0x17,0x18,0x19,0xFF,0xFF,0xFF,0xFF,0xFF  // 'x', 'y', 'z', '{', '|', '}', '~', 'DEL'
    };

     static public String encode(final byte[] bytes)
    {
        int i =0, index = 0, digit = 0;
        int currByte, nextByte;

        // begin fix
        // added by jonelo@jonelo.de, Feb 13, 2005
        // according to RFC 3548, the encoding must also contain paddings in some cases
        int add=0;
        switch (bytes.length) {
            case 1: add=6; break;
            case 2: add=4; break;
            case 3: add=3; break;
            case 4: add=1; break;
        }
        // end fix

        StringBuffer base32 = new StringBuffer(((bytes.length+7)*8/5)+add);

        while(i < bytes.length)
        {
            currByte = (bytes[i]>=0) ? bytes[i] : (bytes[i]+256); // unsign

            /* Is the current digit going to span a byte boundary? */
            if (index > 3)
            {
                if ((i+1)<bytes.length)
                    nextByte = (bytes[i+1]>=0) ? bytes[i+1] : (bytes[i+1]+256);
                else
                    nextByte = 0;

                digit = currByte & (0xFF >> index);
                index = (index + 5) % 8;
                digit <<= index;
                digit |= nextByte >> (8 - index);
                i++;
            }
            else
            {
                digit = (currByte >> (8 - (index + 5))) & 0x1F;
                index = (index + 5) % 8;
                if (index == 0)
                    i++;
            }
            base32.append(base32Chars.charAt(digit));
        }

        // begin fix
        // added by jonelo@jonelo.de, Feb 13, 2005
        // according to RFC 3548, the encoding must also contain paddings in some cases
        switch (bytes.length) {
            case 1: base32.append("======"); break;
            case 2: base32.append("===="); break;
            case 3: base32.append("==="); break;
            case 4: base32.append("="); break;
        }
        // end fix

        return base32.toString();
    }

    static public byte[] decode(final String base32)
    {
        int    i, index, lookup, offset, digit;
        byte[] bytes = new byte[base32.length()*5/8];

        for(i = 0, index = 0, offset = 0; i < base32.length(); i++)
        {
            lookup = base32.charAt(i) - '0';

            /* Skip chars outside the lookup table */
            if ( lookup < 0 || lookup >= base32Lookup.length)
                continue;

            digit = base32Lookup[lookup];

            /* If this digit is not in the table, ignore it */
            if (digit == 0xFF)
                continue;

            if (index <= 3)
            {
                index = (index + 5) % 8;
                if (index == 0)
                {
                   bytes[offset] |= digit;
                   offset++;
                   if(offset>=bytes.length) break;
                }
                else
                   bytes[offset] |= digit << (8 - index);
            }
            else
            {
                index = (index + 5) % 8;
                bytes[offset] |= (digit >>> index);
                offset++;

                if(offset>=bytes.length) break;
                bytes[offset] |= digit << (8 - index);
            }
        }
        return bytes;
    }
}
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       jTextArea2.setText("");
                  open();
                  try{
                    FileReader fr=new FileReader(file);
		            BufferedReader br=new BufferedReader(fr);
		            String s;

		            while ((s=br.readLine())!=null)
		            {
		                  jTextArea2.append(s);
		            }

                     }catch(Exception e){}

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         save();
                   str = jTextArea2.getText();
			     jTextArea2.setText("");
			     try{
			            byte b[]=str.getBytes();

		                FileOutputStream f = new FileOutputStream(file2);
		                for (int i=0;i<b.length ;i++ )
		                {
			                f.write((char) b[i]);
		                }
		                f.close();
			         }
			         catch(Exception e)
			         {}

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
 sdec=jTextArea2.getText();
Thread base32encc=new Thread(this,"");
process=true;
base32enc=true;
base32encc.start();
              


    }//GEN-LAST:event_jButton8ActionPerformed


    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
       Thread base32decc=new Thread(this,"");
process=true;
base32dec=true;
base32decc.start();


    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         str = jTextArea3.getText();
   Thread base64encc=new Thread(this,"");
process=true;
base64enc=true;
base64encc.start();

			    
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        //String str3;
                 str64 = jTextArea3.getText();
  Thread base64decc=new Thread(this,"");
process=true;
base64dec=true;
base64decc.start();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         jTextArea3.setText("");
                  open();
                  try{
                    FileReader fr=new FileReader(file);
		            BufferedReader br=new BufferedReader(fr);
		            String s;

		            while ((s=br.readLine())!=null)
		            {
		                  jTextArea3.append(s);
		            }

                     }catch(Exception e){}
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
         save();
                   str = jTextArea3.getText();
			     jTextArea3.setText("");
			     try{
			            byte b[]=str.getBytes();

		                FileOutputStream f = new FileOutputStream(file2);
		                for (int i=0;i<b.length ;i++ )
		                {
			                f.write((char) b[i]);
		                }
		                f.close();
			         }
			         catch(Exception e)
			         {}


    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
         decrypt = true;
                  jTextArea4.setText("");
                  open();
                  try{
                    FileReader fr=new FileReader(file);
		            BufferedReader br=new BufferedReader(fr);
		            String s;

		            while ((s=br.readLine())!=null)
		            {
		                  jTextArea4.append(s);
		            }

                     }catch(Exception e){}

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
           if(decrypt == false)
                       {
                         JOptionPane.showMessageDialog(this,"Plese Click open button to choose Any Text file","Choose FileFirst",JOptionPane.INFORMATION_MESSAGE);
                       }
                       else
                       {
                Thread basesubstiencc=new Thread(this,"");

                         String input = JOptionPane.showInputDialog("Key");
             key = Integer.parseInt(input);
            save();
            jTextArea4.setText("");
            process=true;
basesubstienc=true;
basesubstiencc.start();
                       }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
     if(decrypt == false)
                       {
                         JOptionPane.showMessageDialog(this,"Plese Click open button to choose Any Encrpted file","Choose FileFirst",JOptionPane.INFORMATION_MESSAGE);
                       }
                       else
                       {
          Thread basesubstidecc=new Thread(this,"");
    
        

                         String input = JOptionPane.showInputDialog(" Type Private Key");
             key = Integer.parseInt(input);
              decrypt= true;
             if (decrypt) key = -key;
             save();jTextArea4.setText("");
                     process=true;
basesubstidec=true;
basesubstidecc.start();
            
                       }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        SengMail sm=new SengMail();
        sm.show();
        this.dispose();
}//GEN-LAST:event_jLabel17MouseClicked
static class Base64{
 public static String encode(String dec)
  {
    return encode(dec, true);
  }
   public static String encode(String dec, boolean align)
  {
    int l = dec.length();
    StringBuffer enc = new StringBuffer(((l*3)+1)/2);
    int state=0, group=0;

    for(int i=0; i<l; i++)
    {
      switch(state)
      {
        case 0:
	  group = dec.charAt(i);
	  break;

        case 1:
	  group = (group<<8) + dec.charAt(i);
	  break;

        default:
	  group = (group<<8) + dec.charAt(i);
	  enc.append(codes[(group>>18)&63]);
	  enc.append(codes[(group>>12)&63]);
	  enc.append(codes[(group>>6)&63]);
	  enc.append(codes[(group)&63]);
	  state = -1;
      }
      state++;
    }

    switch(state)
    {
      case 1:
	enc.append(codes[(group>>6)&63]);
	enc.append(codes[(group)&63]);
	if(align) enc.append("==");
	break;

      case 2:
	enc.append(codes[(group>>12)&63]);
	enc.append(codes[(group>>6)&63]);
	enc.append(codes[(group)&63]);
	if(align) enc.append("=");
    }

    return enc.toString();
  }
public static String decode(String enc)
  {
    int l = enc.length();
    StringBuffer dec = new StringBuffer(l);
    int state=0, group=0;

    for(int i=0; i<l; i++)
    {
      byte b = (byte)(enc.charAt(i));
      int n=-1;

      if((b>=(byte)('A')) && (b<=(byte)('Z'))) n = b-(byte)('A');
      else if((b>=(byte)('a')) && (b<=(byte)('z'))) n = b-(byte)('a')+26;
      else if((b>=(byte)('1')) && (b<=(byte)('9'))) n = b-(byte)('1')+53;
      else if(b==(byte)('0')) n = 52;
      else if(b==(byte)('+')) n = 62;
      else if(b==(byte)('/')) n = 63;
      else if(b==(byte)('=')) break;
      else continue; // ignore unknown characters

      switch(state)
      {
        case 0:
	  group = n;
	  break;

        case 1:
        case 2:
	  group = (group<<6) + n;
	  break;

        default:
	  group = (group<<6) + n;
	  dec.append((char)((group>>16)&255));
	  dec.append((char)((group>>8)&255));
	  dec.append((char)(group&255));
	  state = -1;
      }
      state++;
    }

    switch(state)
    {
      case 3:
	dec.append((char)((group>>8)&255));
	dec.append((char)(group&255));
	break;
      case 2:
	dec.append((char)(group&255));
    }

    return dec.toString();
  }
   private static final char[] codes =
  {
    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'
  };
}
    /**
    * @param args the command line arguments
    */
    public static String encode(String dec)
  {
    int l = dec.length();
    StringBuffer enc = new StringBuffer(l*2);

    for(int i=0; i<l; i++)
      enc.append(enc_codes[(byte)(dec.charAt(i))]);

    return enc.toString();
  }
public static String decode(String enc)
  {
    int l = enc.length();
    StringBuffer dec = new StringBuffer(l/2);

    for(int i=0; i<l; i+=2)
    {
      byte n, b;

      b = (byte)(enc.charAt(i));
      if((b>=(byte)('0')) && (b<=(byte)('9'))) n = (byte)(b-(byte)('0'));
      else n = (byte)(b-(byte)('A')+10);

      b = (byte)(enc.charAt(i+1));
      if((b>=(byte)('0')) && (b<=(byte)('9')))
	n = (byte)((n<<4) + b-(byte)('0'));
      else n = (byte)((n<<4) + b-(byte)('A')+10);

      dec.append((char)n);
    }

    return dec.toString();
  }


    private static final String[] enc_codes =
  {
    "00","01","02","03","04","05","06","07",
    "08","09","0A","0B","0C","0D","0E","0F",
    "10","11","12","13","14","15","16","17",
    "18","19","1A","1B","1C","1D","1E","1F",
    "20","21","22","23","24","25","26","27",
    "28","29","2A","2B","2C","2D","2E","2F",
    "30","31","32","33","34","35","36","37",
    "38","39","3A","3B","3C","3D","3E","3F",
    "40","41","42","43","44","45","46","47",
    "48","49","4A","4B","4C","4D","4E","4F",
    "50","51","52","53","54","55","56","57",
    "58","59","5A","5B","5C","5D","5E","5F",
    "60","61","62","63","64","65","66","67",
    "68","69","6A","6B","6C","6D","6E","6F",
    "70","71","72","73","74","75","76","77",
    "78","79","7A","7B","7C","7D","7E","7F",
    "80","81","82","83","84","85","86","87",
    "88","89","8A","8B","8C","8D","8E","8F",
    "90","91","92","93","94","95","96","97",
    "98","99","9A","9B","9C","9D","9E","9F",
    "A0","A1","A2","A3","A4","A5","A6","A7",
    "A8","A9","AA","AB","AC","AD","AE","AF",
    "B0","B1","B2","B3","B4","B5","B6","B7",
    "B8","B9","BA","BB","BC","BD","BE","BF",
    "C0","C1","C2","C3","C4","C5","C6","C7",
    "C8","C9","CA","CB","CC","CD","CE","CF",
    "D0","D1","D2","D3","D4","D5","D6","D7",
    "D8","D9","DA","DB","DC","DD","DE","DF",
    "E0","E1","E2","E3","E4","E5","E6","E7",
    "E8","E9","EA","EB","EC","ED","EE","EF",
    "F0","F1","F2","F3","F4","F5","F6","F7",
    "F8","F9","FA","FB","FC","FD","FE","FF"
  };
     public void open()
     {
       choose = new JFileChooser();
       choose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
       int result = choose.showOpenDialog(this );


       if ( result == choose.CANCEL_OPTION )
         return;
       else
          {
          	name = new String(" ");
            file= choose.getSelectedFile();
            path = file.getPath ();
            System.out.println(path);
            name= file.getName();

          }
       }
        public void save()
     {
       choosesv = new JFileChooser();
       choosesv.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
       int result = choosesv.showSaveDialog(this);


       if ( result == choosesv.CANCEL_OPTION )
         return;
       else
          {
          	name = new String(" ");
            file2= choosesv.getSelectedFile();
            path = file2.getPath ();
            System.out.println(path);
            name= file2.getName();

          }
       }
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrptoGraphyMain().setVisible(true);
                

            }
        });
    }*/

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
  public void run() {
      if(process==false)
      {
                while(true)
        {
 try
			    {

				 ch=str2.charAt(0);
				 str2=str2.substring(1,str2.length());
				 str2=str2+ch;
				 Thread.sleep(155);
				 jTextField1.setText(str2);

			    }
			    catch (Exception e)
			    {
			    }
    }
      }

      if(process==true)
                {
                     if(base16enc==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                                       String str2=encode(str);
       		                       jTextArea1.setText(str2);
                                       base16enc=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                              if(base16dec==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                                      String str4=decode(str3);
			     jTextArea1.setText(str4);
        base16dec=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                           if(base32enc==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                              bdd=Base32.decode(sdec);
               for(int ii = 0; ii < bdd.length ; ii++) {
            int bb = bdd[ii];
            if (bb<0) bb+=256;
            jTextArea2.setText((Integer.toHexString(bb+256)).substring(1));}
               
        base16dec=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                            if(base32dec==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                              String strr=Base32.encode(bdd);
               jTextArea2.setText(strr);
               
        base32dec=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
   if(base64enc==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                                       long start = System.currentTimeMillis ();
                               String str2=Base64.encode(str);
                               long end = System.currentTimeMillis ();
                               long dif=end-start;
                               JOptionPane.showMessageDialog(this,"time diff",String.valueOf(dif),JOptionPane.INFORMATION_MESSAGE);
			     jTextArea3.setText(str2);

        base64enc=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                        if(base64dec==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;

			     String str2=Base64.decode(str64);
			     jTextArea3.setText(str2);

        base64dec=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                        if(basesubstienc==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
               try{
                 Encryptor crypt = new Encryptor(key);
                  crypt.encryptFile(file,file2);
                    }catch(Exception e){}
                     JOptionPane.showMessageDialog(null,"Encryption Successful.","Encryption",JOptionPane.INFORMATION_MESSAGE);

                    FileReader fr = null;
                            try {
                                fr = new FileReader(file2);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                            }
		            BufferedReader br=new BufferedReader(fr);
		            String s;
                            try {
                                while ((s = br.readLine()) != null) {
                                    jTextArea4.append(s);
                                }
                            } catch (IOException ex) {
                                Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                            }


                        decrypt = false;


        basesubstienc=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }

                    }
                  }
                        if(basesubstidec==true)
                  {
                    jLabel6.setVisible(true);

                    for(int i=1;i<=30;i++)
                    {
                try {
                    Thread.sleep(100);
                    if(i==28)
                    {
                                       jLabel6.setVisible(false);
                                       process=false;
                

        basesubstidec=false;
                                       break;
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(CrptoGraphyMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                    }
  try{
                 Encryptor crypt = new Encryptor(key);
                  crypt.encryptFile(file,file2);
                    }catch(Exception e){}
                     JOptionPane.showMessageDialog(null,"Decryption Successful.","Decryption",JOptionPane.INFORMATION_MESSAGE);
                     try{
                    FileReader fr=new FileReader(file2);
		            BufferedReader br=new BufferedReader(fr);
		            String s;

		            while ((s=br.readLine())!=null)
		            {
		                  jTextArea4.append(s);
		            }

                     }catch(Exception e){}
                     }
                     decrypt = false;
                    }
                  }

                }
